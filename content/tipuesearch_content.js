var tipuesearch = {"pages": [{'title': 'Introduction', 'text': 'NFU-MDE-40823108-KAO,YU-CHE \n 20201/2/25--> Page creation \n ⚡ \n \xa0 This is my Github:\xa0 NFU-MDE-40823108-KAO,YU-CHE \n \xa0 \xa0 Collaborative product design internship for cd2021 \n \xa0 \xa0 \xa0\xa0 Warehouse: \xa0\xa0 cd 2021 Warehouse \n \xa0 \xa0 \xa0 Website: \xa0  cd 2021 Website \n \xa0 \xa0 \xa0\xa0 Group warehouse :\xa0 -- \n \xa0 \xa0 \xa0 Group website: -- \n \n ⚡ \n \xa0 This is a personal website:\xa0 \xa0 Godfather-Adolphe50-2021 \n \xa0 \xa0\xa0 Warehouse:\xa0 Godfather-Adolphe50-2021 Warehouse \n \xa0 \xa0\xa0 Website: \xa0 Godfather-Adolphe50-2021 Website \n \xa0 \xa0\xa0 Youtube: \xa0 Godfather Adolphe 50 \n ⚡ \n \xa0 An introduction to computer programs for the first course:\xa0 \xa0 cp2019 \n \xa0 \xa0 Warehouse:\xa0 cp 2019 Warehouse \xa0 \n \xa0 \xa0 Website:\xa0 c p 2019 Website \n \xa0 \xa0 \xa0 Group warehouse :\xa0 cp 2019ag5 Warehouse \n \xa0 \xa0\xa0 Group website:\xa0 cp 2019ag5 website \n ⚡ \n \xa0 Internet content management for the following courses:\xa0 \xa0 wcm2020 \n \xa0 \xa0 Warehouse:\xa0 wcm 2020 Warehouse \n \xa0 \xa0\xa0 Website:\xa0 wcm 2020 Website \n ⚡ \n \xa0 The second course computer-aided design practice:\xa0 \xa0 cad2020 \n \xa0 \xa0 Warehouse:\xa0 cad 2020 Warehouse \n \xa0 \xa0\xa0 Website:\xa0 cad 2020 Website \n \xa0 \xa0\xa0 Group warehouse : \xa0 cad 2020ag4 Warehouse \n \xa0 \xa0\xa0 Group website: \xa0 cad 2020ag4 website \n ⚡ \n \xa0 The second course collaborative product design practice:\xa0 \xa0 cd2021 \n \xa0 \xa0\xa0 Warehouse: \xa0\xa0 cd 2021 Warehouse \n \xa0 \xa0 Website: \xa0 \xa0 cd 2021 Website \n \xa0 \xa0\xa0 Group warehouse :\xa0 -- \n \xa0 \xa0 Group website: -- \n \n', 'tags': '', 'url': 'Introduction.html'}, {'title': 'KMOLab basis', 'text': 'About: \n 此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules \xa0 https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'KMOLab basis.html'}, {'title': 'Cmsimde create', 'text': 'Step1: \n \xa0  Go to \xa0 2021 可攜程式系統 First download the\xa0 下載 kmol2021_spring_v2.7z \xa0compressed file, and extract the file to the\xa0 \xa0 flash drive. \n Step2: \n \xa0\xa0 Set gitconfig and save this file in the home directory. First go to home and select the .config file. \n \n \n Step3: \n \xa0\xa0Drag the  .config file  to\xa0 (Untitled)-SciTE, modify the name and mailbox to your student ID. \n \n Step4: \n \xa0 Go to\xa0 https://github.com/mdecourse/cmstemplate , And click on the red box below. \n \n Step5: \n \xa0\xa0Establish cd2021 warehouse. \n \n Step6: \n \xa0\xa0After completing the cd 2021 storage, click the settings below. \n \n Step7: \n \xa0\xa0Slide to the GitHub Pages below to create GitHub Pages. \n \n Step8: \n \xa0\xa0Open cmd, and enter cd tmp Re-enter: git clone --recurse-submodules  https://github.com/40823108/cd2021.git \n \n Step9: \n \xa0\xa0Test whether the website is established. \n Y:\\tmp\\cd2021\\cmsimde>python wsgi.py \n \n Step10: \n \xa0\xa0Open the browser and enter https://localhost:9443, click Advanced. \n \n Step11: \n \xa0\xa0Click to continue. \n \n Step12: \n \xa0\xa0Click login. \n \n Step13: \n \xa0\xa0enter password. \n \n Step14: \n \xa0\xa0Can start editing the website. \n \n Step15: \n \xa0 Upload the file to github. \n Y:\\tmp\\cd2021>git add . \n \n Step16: \n \xa0\xa0 Y:\\tmp\\cd2021>git commit -m "add" \n \n Step17: \n \xa0\xa0\xa0\xa0 Y:\\tmp\\cd2021>git push \n \n Step18: \n \xa0\xa0Successfully established a website. \n \n \n', 'tags': '', 'url': 'Cmsimde create.html'}, {'title': 'SSH key produce', 'text': 'Open: \n \xa0 Y:/PuTTY-->puttygen.exe \n \n \xa0 Use puttygen to import the private key (id_rsa) and convert it into a format (.ppk) file that putty can understand. \n \xa0 After saving the (.ppk) file. \n \n \xa0 Use scite to open the public key (id_rsa.pub), go to the toolbar and find Options-->Wrap to see the complete file content. \n \n \xa0 The full content is as follows: \n \n \xa0 Go to storage-->seeting-->SSH and GPG keys, click New SSH key, paste the copied content and save it for use. \n', 'tags': '', 'url': 'SSH key produce.html'}, {'title': 'SSH putty settings', 'text': '\xa0 SSH Putty settings: \n \n \xa0 Please select the .ppk file for the line drawing. \n \n \xa0 Go back to the Session directory and press save to save. \n \n \xa0 Enter the folder you want to Push, then enter the \\tmp\\cd2021\\.git directory, modify the config file, and modify the string  url=https:\\\\github.com:40823108/cd2021.git \n \xa0 Modified to:  url=git@github.com:40823108/cd2021.git \n \n \xa0 The following is a record of successful use of SSH without password push. \n', 'tags': '', 'url': 'SSH putty settings.html'}, {'title': 'Midterm', 'text': '', 'tags': '', 'url': 'Midterm.html'}]};