<h1>Introduction</h1>
<p><marquee behavior="alternate" direction="right" height="30" scrollamount="5">NFU-MDE-40823108-KAO,YU-CHE</marquee></p>
<p><em><strong>20201/2/25--&gt; Page creation</strong></em></p>
<p><em><strong><span>⚡</span></strong></em></p>
<p><em>  This is my Github: <strong><a href="https://github.com/40823108">NFU-MDE-40823108-KAO,YU-CHE</a></strong></em></p>
<p>    Collaborative product design internship for cd2021</p>
<p><i><em><em><em><strong>      </strong>Warehouse:</em></em></em></i><em><strong>  </strong><strong><a href="https://github.com/40823108/cd2021">cd 2021 Warehouse</a></strong></em></p>
<p><i><em><em><em>      Website:</em></em></em></i><em><strong>  <a href="https://40823108.github.io/cd2021/content/index.html">cd 2021 Website</a></strong></em></p>
<p><i><em><em><em>      <span>Group warehouse</span><i>:  --</i></em></em></em></i></p>
<p><i><em><em><em>      Group website: --</em></em></em></i></p>
<hr noshade="noshade" size="5" width="2000"/>
<p><span>⚡</span></p>
<p><span>  This is a personal website: <span> </span><em><strong>Godfather-Adolphe50-2021</strong></em></span></p>
<p>    <i>Warehouse: </i><em><strong><a href="https://github.com/40823108/Godfather-Adolphe-2021">Godfather-Adolphe50-2021 Warehouse</a></strong></em></p>
<p><em><strong>    </strong>Website:<strong> <a href="https://40823108.github.io/Godfather-Adolphe-2021/content/index.html"><em><strong></strong><strong>Godfather-Adolphe50-2021 Website</strong></em></a></strong></em></p>
<p><b><i>    </i></b><i>Youtube:</i><b><i> <strong><a href="https://www.youtube.com/channel/UCd3WMYoS7LQ5-Yh1u7gXbpA/featured">Godfather Adolphe 50</a></strong></i></b></p>
<p>⚡</p>
<p><em>  An introduction to computer programs for the first course: <span> </span><strong>cp2019</strong></em></p>
<p><i>    Warehouse: </i><em><strong><a href="https://github.com/40823108/cp2019">cp 2019 Warehouse</a> </strong></em></p>
<p><em>    Website: </em><a href="https://40823108.github.io/cp2019/content/index.html"><em><strong>c</strong><strong>p 2019 Website</strong></em></a></p>
<p><b><i>   <span> </span></i></b><i><span>Group warehouse</span></i><i>: </i><a href="https://github.com/40823108/cp2019ag5"><em><strong>cp 2019ag5 Warehouse</strong></em></a></p>
<p><b><i>    </i></b><i>Group website: </i><em><strong><a href="https://40823102.github.io/cp2019ag5/content/index.html">cp 2019ag5 website</a></strong></em></p>
<p><em><strong><span>⚡</span></strong></em></p>
<p><em>  Internet content management for the following courses: <span> </span><strong>wcm2020</strong></em></p>
<p><i>    Warehouse: <em><strong><a href="https://github.com/40823108/wcm2020">wcm 2020 Warehouse</a></strong></em></i></p>
<p><i><em><strong>    </strong>Website: <strong><a href="https://40823108.github.io/wcm2020/content/index.html"><em>wcm 2020 Website</em></a></strong></em></i></p>
<p><i><em><strong><em><span>⚡</span></em></strong></em></i></p>
<p><i><em><em>  The second course computer-aided design practice: <span> </span><strong>cad2020</strong></em></em></i></p>
<p><i>    Warehouse: <em><strong><a href="https://github.com/40823108/cad2020">cad 2020 Warehouse</a></strong></em></i></p>
<p><i><em><strong>    </strong>Website: <strong><a href="https://40823108.github.io/cad2020/content/index.html">cad 2020 Website</a></strong></em></i></p>
<p><i><em><strong>    </strong>Group warehouse<i>:</i><strong><i> </i><a href="https://github.com/a40823112/cad2020ag4"><em><strong>cad 2020ag4 Warehouse</strong></em></a></strong></em></i></p>
<p><i><em><strong><em><strong>    </strong></em></strong><em>Group website:</em><strong><em><strong> <em><strong><a href="https://a40823112.github.io/cad2020ag4/content/index.html">cad 2020ag4 website</a></strong></em></strong></em></strong></em></i></p>
<p><i><em><strong><em><strong><em><strong><span>⚡</span></strong></em></strong></em></strong></em></i></p>
<p><i><em><em><em>  The second course collaborative product design practice: <span> </span><strong>cd2021</strong></em></em></em></i></p>
<p><i><em><em><em><strong>    </strong>Warehouse:<strong>  </strong><strong><a href="https://github.com/40823108/cd2021">cd 2021 Warehouse</a></strong></em></em></em></i></p>
<p><i><em><em><em>    Website:<strong> <span> </span><a href="https://40823108.github.io/cd2021/content/index.html">cd 2021 Website</a></strong></em></em></em></i></p>
<p><i><em><em><em>    <span>Group warehouse</span><i>:  --</i></em></em></em></i></p>
<p><i><em><em><em>    Group website: --</em></em></em></i></p>
<p></p>
<h1>KMOLab basis</h1>
<p><strong>About:</strong></p>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules<span> </span><a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<p><em></em><strong><br/></strong></p>
<h2>Cmsimde create</h2>
<p><strong>Step1:</strong></p>
<p><span>  <em>Go to</em></span><em><strong> </strong><a href="https://github.com/mdecourse/cd2021/discussions/7"><strong>2021 可攜程式系統</strong><br/></a>First download the <strong><a href="https://drive.google.com/file/d/1R6vAAWdNDigmyvFFQTKyM-XNKOWeCFJU/view?usp=sharing" rel="nofollow">下載 kmol2021_spring_v2.7z</a></strong> compressed file, and extract the file to the    flash drive.</em></p>
<p><strong>Step2:</strong></p>
<p><strong>  </strong><i>Set gitconfig and save this file in the home directory.<br/>First go to home and select the .config file.<br/></i></p>
<p><i><img alt="" height="650" src="/images/cmsimde-1.JPG" width="1175"/></i></p>
<p><i><img alt="" height="653" src="/images/cmsimde-2.JPG" width="1179"/></i></p>
<p><strong>Step3:</strong></p>
<p><em>  Drag the<strong> .config file</strong> to <i><span><strong>(Untitled)-SciTE,</strong>modify the name and mailbox to your student ID.</span></i></em></p>
<p><em><i><span><strong><img alt="" height="733" src="/images/cmsimde-3.JPG" width="563"/></strong></span></i></em></p>
<p><strong>Step4:</strong></p>
<p><em>  Go to </em><strong><a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a>,</strong><em>And click on the red box below.</em></p>
<p><strong><img alt="" height="1080" src="/images/cmsimde-4.JPG" width="1920"/></strong></p>
<p><strong>Step5:</strong></p>
<p><em>  Establish cd2021 warehouse.</em></p>
<p><em><img alt="" height="1080" src="/images/cmsimde-5.JPG" width="1920"/></em></p>
<p><strong>Step6:</strong></p>
<p><em>  After completing the cd 2021 storage, click the settings below.</em></p>
<p><em><img alt="" height="1080" src="/images/cmsimde-6.JPG" width="1920"/></em></p>
<p><strong>Step7:</strong></p>
<p><em>  Slide to the GitHub Pages below to create GitHub Pages.</em></p>
<p><em><img alt="" height="1080" src="/images/cmsimde-7.JPG" width="1920"/></em></p>
<p><strong>Step8:</strong></p>
<p><em>  Open cmd, and enter cd tmp<br/>Re-enter: git clone --recurse-submodules <a href="https://github.com/40823108/cd2021.git">https://github.com/40823108/cd2021.git</a><br/></em></p>
<p><em><img alt="" height="516" src="/images/cmsimde-8.JPG" width="985"/></em></p>
<p><strong>Step9:</strong></p>
<p><em>  Test whether the website is established.</em></p>
<p><strong>Y:\tmp\cd2021\cmsimde&gt;python wsgi.py</strong></p>
<p><strong><img alt="" height="513" src="/images/cmsimde-9.JPG" width="980"/></strong></p>
<p><strong>Step10:</strong></p>
<p><em>  Open the browser and enter https://localhost:9443, click Advanced.</em></p>
<p><em><img alt="" height="1079" src="/images/cmsimde-10.JPG" width="1914"/></em></p>
<p><strong>Step11:</strong></p>
<p><em>  Click to continue.</em></p>
<p><em><img alt="" height="1080" src="/images/cmsimde-11.JPG" width="1920"/></em></p>
<p><strong>Step12:</strong></p>
<p><em>  Click login.</em></p>
<p><em><img alt="" height="1080" src="/images/cmsimde-12.JPG" width="1920"/></em></p>
<p><strong>Step13:</strong></p>
<p><em>  enter password.</em></p>
<p><em><img alt="" height="1075" src="/images/cmsimde-13.JPG" width="1910"/></em></p>
<p><strong>Step14:</strong></p>
<p><em>  Can start editing the website.</em></p>
<p><em><img alt="" height="1080" src="/images/cmsimde-14.JPG" width="1920"/></em></p>
<p>Step15:</p>
<p><em>  Upload the file to github.</em></p>
<p><em><strong>Y:\tmp\cd2021&gt;git add .</strong></em></p>
<p><em><strong><img alt="" height="513" src="/images/cmsimde-15.JPG" width="982"/></strong></em></p>
<p><strong>Step16:</strong></p>
<p><em>  <strong>Y:\tmp\cd2021&gt;git commit -m "add"</strong></em></p>
<p><em><strong><img alt="" height="511" src="/images/cmsimde-16.JPG" width="978"/></strong></em></p>
<p><strong>Step17:</strong></p>
<p><em>    <strong>Y:\tmp\cd2021&gt;git push</strong></em></p>
<p><em><strong><img alt="" height="513" src="/images/cmsimde-17.JPG" width="977"/></strong></em></p>
<p><strong>Step18:</strong></p>
<p><em>  Successfully established a website.</em></p>
<p><em><img alt="" height="1080" src="/images/cmsimde-18.JPG" width="1920"/></em></p>
<p><em> </em></p>
<h2>Python program</h2>
<p><strong>Python program:</strong></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import csv
   
# read student list
filename = 'D:/1a/1alist.txt'
with open(filename, encoding="utf-8") as f:
    content = f.readlines()
    student = [x.strip() for x in content]
#print(content)
#print(student)
   
# Timestamp, email, ????, url, score, desp, memo
# 0, 1, 2, 3, 4, 5, 6
#total = 0
  
all = {}
with open('D:/1a/1a.csv', encoding="utf-8") as csv_file:
    csv_reader = csv.reader(csv_file, delimiter=',')
       
    line_count = 0
    for row in csv_reader:
        if line_count == 0:
            #print(f'Column names are {", ".join(row)}')
            line_count += 1
        else:
            student_num = row[1].split("@")[0]
            #print(student_num)
            student_score = row[4]
            #print(student_score)
            try:
                all.update({student_num: student_score})
            except:
                all.update({student_num: "error"})
            #print(f'\t{row[0]} works in the {row[1]} department, and was born in {row[2]}.')
            #print(f'\t{row[4]}')
            #total += int(row[4])
            line_count += 1
#print(all)
#print(student)
  
for i in student:
       
    #if i in all:
        #pass
    #else:
        #print(str(i))
       
    try:
        print(i + "\t" + all[i])
    except:
        print(i + "\t60")
  
   
    #print(f'Processed {line_count} lines.')
    #print("??=" + str(total/line_count))</pre>
<p><strong>Flask program:</strong></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask
   
app = Flask(__name__)
   
@app.route('/') 
def hello_world():
    return 'Hello, From Flask!'
   
if __name__== '__main__': 
    app.run()
</pre>
<h2>SSH key produce</h2>
<p>Open:</p>
<p>  Y:/PuTTY--&gt;puttygen.exe</p>
<p><img alt="" height="701" src="/images/ssh-1.PNG" width="1272"/></p>
<p><em>  Use puttygen to import the private key (id_rsa) and convert it into a format (.ppk) file that putty can understand.</em></p>
<p><em>  After saving the (.ppk) file.</em></p>
<p><em><img alt="" height="471" src="/images/ssh-2.PNG" width="481"/></em></p>
<p><em>  Use scite to open the public key (id_rsa.pub), go to the toolbar and find Options--&gt;Wrap to see the complete file content.</em></p>
<p><em><img alt="" height="929" src="/images/ssh-3.PNG" width="610"/></em></p>
<p><em><span>  The full content is as follows:</span></em></p>
<p><em><span><img alt="" height="734" src="/images/ssh-4.PNG" width="564"/></span></em></p>
<p><em><span>  Go to storage--&gt;seeting--&gt;SSH and GPG keys, click New SSH key, paste the copied content and save it for use.</span></em></p>
<p><em><span><img alt="" height="1440" src="/images/ssh-5.PNG" width="2560"/></span></em></p>
<h2>SSH putty settings</h2>
<p><em>  SSH Putty settings:</em></p>
<p><em><img alt="" height="443" src="/images/ssh-6.PNG" width="452"/></em></p>
<p><em>  Please select the .ppk file for the line drawing.</em></p>
<p><em><img alt="" height="444" src="/images/ssh-7.PNG" width="454"/></em></p>
<p><em>  Go back to the Session directory and press save to save.</em></p>
<p><em><img alt="" height="442" src="/images/ssh-8.PNG" width="453"/></em></p>
<p><em>  Enter the folder you want to Push, then enter the \tmp\cd2021\.git directory, modify the config file, and modify the string <strong>url=https:\\github.com:40823108/cd2021.git</strong></em></p>
<p><em>  Modified to: <strong>url=git@github.com:40823108/cd2021.git</strong></em></p>
<p><em><strong><img alt="" height="734" src="/images/ssh-9.PNG" width="565"/></strong></em></p>
<p><em>  The following is a record of successful use of SSH without password push.</em></p>
<p><em><img alt="" height="515" src="/images/ssh-10.PNG" width="984"/></em></p>
<p><em></em></p>
<h2>Leo Edit Blog</h2>
<p><strong>Step1:</strong></p>
<p><em>  Open leo </em>➜ Y:/tmp&gt;leo</p>
<p><img alt="" height="513" src="/images/leo-1.JPG" width="982"/></p>
<p><strong>Step2:</strong></p>
<p><em>  After opening leo, search Disqus in the browser and add a forum.</em></p>
<p><em><img alt="" height="1439" src="/images/leo-2.JPG" width="2560"/></em></p>
<p><strong>Step3:</strong></p>
<p><em>  Click File <span>➜ Open-Outline</span></em><strong><br/></strong></p>
<p><em><span><img alt="" height="960" src="/images/leo-8.jpg" width="1706"/></span></em></p>
<p><strong>Step4:</strong></p>
<p><em>  Y:\tmp\cd2021\config&gt;pelican.leo</em></p>
<p><em><img alt="" height="712" src="/images/leo-9.JPG" width="1186"/></em></p>
<p><em><img alt="" height="715" src="/images/leo-10.JPG" width="1188"/></em></p>
<p><em><img alt="" height="712" src="/images/leo-13.JPG" width="1188"/></em></p>
<p><strong>Step5:</strong></p>
<p><em>  Modify the data in the share.</em></p>
<p><em><img alt="" height="1440" src="/images/leo-3.JPG" width="2560"/></em></p>
<p><strong>Step6:</strong></p>
<p><em>  Modify the data in the remote.</em></p>
<p><em><img alt="" height="1440" src="/images/leo-4.JPG" width="2560"/></em></p>
<p><strong>Step7:</strong></p>
<p><em>  Edit template <span>➜ </span>@edit base.html</em></p>
<p><em><img alt="" height="1440" src="/images/leo-5.JPG" width="2560"/></em></p>
<p><strong>Step8:</strong></p>
<p><em>  Modify markdown.</em></p>
<p><em><img alt="" height="1440" src="/images/leo-6.JPG" width="2560"/></em></p>
<p><em><img alt="" height="1440" src="/images/leo-7.JPG" width="2560"/></em></p>
<h2>Leo Edit Reveal</h2>
<p><strong>Step1:</strong></p>
<p><em>  Open leo </em>➜ Y:/tmp&gt;leo</p>
<p><img alt="" height="513" src="/images/leo-1.JPG" width="982"/></p>
<p><strong>Step2:</strong></p>
<p><em>  Click File <span>➜ Open-Outline</span></em></p>
<p><em><span><img alt="" height="960" src="/images/leo-8.jpg" width="1706"/></span></em></p>
<p><strong>Step3:</strong></p>
<p><em>  Y:\tmp\cd2021\config&gt;reveal.leo</em></p>
<p><em><img alt="" height="712" src="/images/leo-9.JPG" width="1186"/></em></p>
<p><em><img alt="" height="715" src="/images/leo-10.JPG" width="1188"/></em></p>
<p><em><img alt="" height="717" src="/images/leo-11.JPG" width="1185"/></em></p>
<p><strong>Step4:</strong></p>
<p><strong>  </strong><em>You can start editing Reveal.</em></p>
<p><em><img alt="" height="1440" src="/images/leo-12.JPG" width="2560"/></em></p>
<h1>Midterm</h1>
<h2>W1</h2>
<p>The first stage of group collaborative internship:</p>
<p>  The weekly group report must include html, pdf and Youtube videos:</p>
<p>    Thematic topic:</p>
<p>      Student ID of the first group member: <strong>40823145</strong></p>
<p>      Student ID of the second group member: <strong>40823108</strong></p>
<p>      Student ID of other group members:</p>
<p>Internship tasks of each group:</p>
<p>  1.The group leader’s Github account has established the group website for each group. However, in the process of ordering each class in W1, it is found that even if Ethercalc is used to synchronize the Internet collaboration method to allow the optional group members of each class to fill in the student ID of the group of two or two, but still If there is a lack of manual labor or an effective plan for automatically determining the order of each team, I hereby instruct each group to carry out their own collaborative product development project (W2-W4), this topic is listed as one of the mandatory topics, and each group is explained in detail The first stage that is considered the most efficient and the method and process of setting the order.</p>
<p>  2.In addition, in order to allow each group to collaborate in the internship process at stage1, the team members can publish their work and experience reports during the W2-W4 process through the blog, indicating that Leo Editor can be used to assist Pelican in CMSiMDE to publish collaborative blogs. The purpose is to enable each group to fully display the blog records left by each stage during the collaboration period. However, this method must be familiar with the operation of Leo Editor, so the creation of a collaborative blog through Pelican, in addition to using Leo Editor to assist in setting and In addition to creating a pelican blog, this topic is also listed as the second of the mandatory topics for each group in the Stage1 collaborative product design process. Please explain in detail for each group when using or not using Leo Editor, each group member is setting and creating Problems and solutions that may be encountered or produced in the process of collaborative blogging.</p>
<hr/>
<p>W1 completion items:</p>
<p>  Use cmstemplate to create a website, install Leo Editor, set the Pelican blog in CMSiMDE, and use the button command to convert the Pelican Markdown file, and save the blog super file into the blog directory.</p>
<h2>W2</h2>
<p><em>  Project production started this week, and the subject of production was discussed with the team members.</em></p>
<p><em>The following picture is the project that the group wants to do, the gripper of the robotic arm.</em></p>
<p><em><img alt="" height="960" src="/images/midterm-1.jpg" width="1706"/></em></p>
<p><em>We will use <a href="https://cyberbotics.com/">Webots</a> to simulate the movement of the gripper.</em></p>
<p><em><img alt="" height="960" src="/images/midterm-2.jpg" width="1706"/></em></p>
<h3>Webots</h3>
<p><em>Continuous research</em></p>
<h2>W3</h2>
<p><em>Due to the complexity of the gripper of the robotic arm, we revised the direction of the question.</em></p>
<p><em>The new title is: Lego-EV3<br/>  Through the connection between the building blocks, a variety of different institutions are made. This time, the car is the direction.</em></p>
<p><em>The picture below is our ideal design:</em></p>
<p><em><img alt="" height="1198" src="/images/EV3-1.JPG" width="1548"/></em></p>
<h3>work</h3>
<p><em>The picture below is our ideal design:</em></p>
<p><em><img alt="" height="1198" src="/images/EV3-1.JPG" width="1548"/></em></p>
<p>2021/3/8</p>
<p><em>Draw the body</em></p>
<p><em><img alt="" height="960" src="/images/EV3-2.jpg" width="1706"/></em></p>
<p><em>2021/3/9</em></p>
<p><em>Draw the match between the motor and the body</em></p>
<p><em><img alt="" height="960" src="/images/EV3-3.jpg" width="1706"/></em></p>
<p><i>2021/3/11</i></p>
<p><i>Draw the connecting rod and the motor-body fit</i></p>
<p><i><img alt="" height="960" src="/images/EV3-4.jpg" width="1706"/></i></p>
<p><i>2021/3/12</i></p>
<p><i>Complete picture</i></p>
<p><i><img alt="" height="960" src="/images/EV3-5.jpg" width="1706"/></i></p>
<p><i><img alt="" height="960" src="/images/EV3-6.jpg" width="1706"/></i></p>
<p><i></i></p>
<h2>W4</h2>
<p><em>Group briefing</em></p>
<p><em>Design Tools: Autodesk Inventor Proffessional 2021</em></p>
<p><em>Design motivation: Because I took a course in the last semester-Introduction to Electromechanical Optical System, I found it very interesting to play with this institution. I want to do additional design through computer simulation.</em></p>
<p><em>2D engineering drawing:</em></p>
<p><em><img alt="" height="1204" src="/images/EV3-8.JPG" width="1704"/></em></p>
<p><em>3D exploded view, BOM:</em></p>
<p><em><img alt="" height="1203" src="/images/EV3-7.JPG" width="1702"/></em></p>
<p><em>3D model:</em></p>
<p><em><img alt="" height="960" src="/images/EV3-5.jpg" width="1706"/></em></p>
<p><em>Simulation:</em></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/CO1Vg2Ma95k" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ASH91DmuYBk" width="560"></iframe></p>
<p><iframe height="580" src="https://drive.google.com/file/d/1VTZRCIs_ifjLimdZAVUOUr5o4abNILUg/preview" width="640"></iframe></p>
<p><em>Collaborative design method and process: Use google meet screen sharing for discussion and design.</em></p>
<p><em></em></p>
<p><em>Design result: Because the size is customized, the scale is a big problem. In the simulation, the parts are too complicated, which leads to the need for simplification.</em></p>
<p><em><span>Self-evaluation: 65</span></em></p>
<p><em></em></p>
<h2>W5</h2>
<p>第五週分組專案開始，分組以第一次分組兩兩合併為主。</p>
<p>組別為:stage2-ag1</p>
<p>組員:</p>
<p>40823108-cd2021</p>
<p>40823109<span>-cd2021</span></p>
<p>40823112<span>-cd2021</span></p>
<p>40823145<span>-cd2021</span></p>
<p>本次專案沿用stage1-ag1之專案，為了讓模型能夠按照我們的意思做動，我們嘗試編寫Lua程式並以方向鍵進行控制。</p>
<p>下方為第一次測試程式與模擬圖</p>
<p><img alt="" height="960" src="/images/EV3-12.jpg" width="1706"/></p>
<p>Lua程式:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">threadFunction=function()
    -- put your actuation code here
 while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do
    -- Read the keyboard messages (make sure the focus is on the main window, scene view):
        message,auxiliaryData=sim.getSimulatorMessage()
        while message~=-1 do
            if (message==sim.message_keypress) then
if (auxiliaryData[1]==2007) then
                -- up key
                velocity=1000
                torque=10000
                Shape4 = 1000
                Shape7 = 1000
            end
            if (auxiliaryData[1]==2008) then
                -- down key
                velocity=1000
                torque=10000
                Shape4 = 1000
                Shape7 = 1000
            end
            if (auxiliaryData[1]==2009) then
                -- left key
                velocity=1000
                torque=10000
                Shape4 = 1000
                Shape7 = 1000
            end
            if (auxiliaryData[1]==2010) then
                -- right key
                velocity=1000
                torque=10000
                Shape4 = 1000
                Shape7 = 1000
            end
        end
        message,auxiliaryData=sim.getSimulatorMessage()
    end
    if Shape4 == 1
        then sim.setJointPosition(joint_1, 1000, orientation)
    if Shape7 == 1
        then sim.setJointPosition(joint_2, 1000, orientation)
    end
        sim.setJointTargetVelocity(joint,velocity)
    end
        joint_1=sim.getObjectHandle('joint_1')
        joint_2=sim.getObjectHandle('joint_2')
        Shape4=sim.getObjectHandle('Shape4')
        Shape7=sim.getObjectHandle('Shape7')
        velocity=0
        torque=0
        Shape4 = 0
        Shape7 = 0
end</pre>
<p></p>